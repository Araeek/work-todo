(()=>{"use strict";function t(t,e,n,o){this.title=t,this.description=e,this.dueDate=n,this.priority=o}function e(t){this.name=t,this.todos=[]}const n=[new e("Default")];function o(t){const o=new e(t);n.push(o)}function i(t,e){n[t].todos.push(e)}function c(){const t=document.querySelector("#project-list");t.innerHTML="";for(let e=0;e<n.length;e++){const o=document.createElement("div");o.classList.add("project"),o.dataset.projectIndex=`${e}`,o.innerHTML=`\n          <h3>${n[e].name}</h3>\n          <div class="project-actions">\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-edit edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-trash-alt delete"></i>\n            </button>\n          </div>\n        `,t.appendChild(o)}}function s(t){const e=document.querySelector(".todo-container");document.querySelector("#project-title").textContent=`${n[t].name}`,document.querySelector(".edit-project-btn").dataset.projectIndex=`${t}`,e.innerHTML="";for(let o=0;o<n[t].todos.length;o++){const i=document.createElement("div");i.classList.add("todo"),i.innerHTML=`\n          <h3>${n[t].todos[o].title}</h3>\n          <p>\n            <input type="date" id="date" name="date" value=${n[t].todos[o].dueDate}>\n          </p>\n          <div class="todo-priority">\n            <select class="priority-select">\n              <option value="high" ${"high"===n[t].todos[o].priority?"selected":""}>\n              <div class="priority-circle priority-high"></div>\n              <p class="priority-text-high">high</p>\n              </option>\n              <option value="medium" ${"medium"===n[t].todos[o].priority?"selected":""}>\n              <div class="priority-circle priority-medium"></div>\n              <p class="priority-text-medium">medium</p>\n              </option>\n              <option value="low" ${"low"===n[t].todos[o].priority?"selected":""}>\n              <div class="priority-circle priority-low"></div>\n              <p class="priority-text-low">low</p>\n              </option>\n            </select>\n            \n          </div>\n          <div class="todo-actions">\n            <label class="complete-checkbox">\n              <span class="complete-label-text">Complete</span>\n              <input type="checkbox" name="checkbox">\n              <span class="complete-todo-btn"></span>\n            </label>\n            <button class="edit-todo-btn" data-project-index="${t}">\n              <i class="fas fa-edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${t}">\n              <i class="fas fa-trash-alt"></i>\n            </button>\n          </div>\n        `,e.appendChild(i)}}const a=document.getElementById("project-add"),r=document.getElementById("project-edit"),d=document.getElementById("project-add-btn"),l=document.querySelectorAll(".close-span"),p=document.querySelector("#project-add-form"),u=document.querySelector("#project-edit-form"),m=document.querySelector("#project-list"),h=document.querySelector(".edit-project-btn"),v=document.querySelector(".add-todo-btn"),y=document.querySelector("#todo-add");function b(t){r.classList.add("show"),document.querySelector("#project-edit-name").value=`${n[t.target.parentNode.getAttribute("data-project-index")].name}`,u.addEventListener("submit",(function e(o){var i,a;o.preventDefault(),r.classList.remove("show"),i=t.target.parentNode.getAttribute("data-project-index"),a=document.querySelector("#project-edit-name").value,n[i].name=a,c(),s(t.target.parentNode.getAttribute("data-project-index")),u.removeEventListener("submit",e)}))}d.onclick=function(){a.classList.add("show")},l.forEach((t=>{t.addEventListener("click",(function(){a.classList.remove("show"),r.classList.remove("show"),y.classList.remove("show")}))})),window.onclick=function(t){t.target!=a&&t.target!=r&&t.target!=y||(a.classList.remove("show"),r.classList.remove("show"),y.classList.remove("show"))},p.addEventListener("submit",(function(t){t.preventDefault(),a.classList.remove("show"),o(document.querySelector("#project-name").value),c()})),m.addEventListener("click",(function(t){var e;t.target.classList.contains("delete")&&(e=t.target.parentNode.getAttribute("data-project-index"),n.splice(e,1),c()),t.target.classList.contains("edit")?b(t):t.target.classList.contains("project")?s(t.target.getAttribute("data-project-index")):s(t.target.parentNode.getAttribute("data-project-index"))})),h.addEventListener("click",(function(t){b(t)})),v.addEventListener("click",(function(){y.classList.add("show")}));const g=new t("Finish project","Complete the assignment","2023-04-01","medium");i(0,g),i(0,g),i(0,g),o("Shopping List"),i(1,new t("Buy groceries","Get eggs, bread, and milk","2023-04-03","medium")),c(),s(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,