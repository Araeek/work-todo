(()=>{"use strict";function t(t,e,o,n){this.title=t,this.dueDate=e,this.priority=o,this.complete=n}function e(t){this.name=t,this.todos=[]}const o=[new e("Default")];function n(t){const n=new e(t);o.push(n)}function s(t,e){o[t].todos.push(e)}function i(){const t=document.querySelector("#project-list");t.innerHTML="";for(let e=0;e<o.length;e++){const n=document.createElement("div");n.classList.add("project"),n.dataset.projectIndex=`${e}`,n.innerHTML=`\n          <h3>${o[e].name}</h3>\n          <div class="project-actions">\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-edit edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-trash-alt delete"></i>\n            </button>\n          </div>\n        `,t.appendChild(n)}}function c(t){const e=document.querySelector(".todo-container");document.querySelector("#project-title").textContent=`${o[t].name}`,document.querySelector(".project-title-section").dataset.projectIndex=`${t}`,e.innerHTML="";for(let n=0;n<o[t].todos.length;n++){const s=document.createElement("div");s.classList.add("todo"),s.innerHTML=`\n          <h3>${o[t].todos[n].title}</h3>\n          <p>\n            <input type="date" id="date" name="date" value=${o[t].todos[n].dueDate}>\n          </p>\n          <div class="todo-priority">\n            <select class="priority-select">\n              <option value="high" ${"high"===o[t].todos[n].priority?"selected":""}>\n              <div class="priority-circle priority-high"></div>\n              <p class="priority-text-high">high</p>\n              </option>\n              <option value="medium" ${"medium"===o[t].todos[n].priority?"selected":""}>\n              <div class="priority-medium"></div>\n              <p class="priority-text-medium">medium</p>\n              </option>\n              <option value="low" ${"low"===o[t].todos[n].priority?"selected":""}>\n              <div class="priority-circle priority-low"></div>\n              <p class="priority-text-low">low</p>\n              </option>\n            </select>\n            \n          </div>\n          <div class="todo-actions">\n            <label class="complete-checkbox">\n              <span class="complete-label-text">Complete</span>\n              <input type="checkbox" name="checkbox" ${o[t].todos[n].complete?"checked":""}>\n              <span class="complete-todo-btn"></span>\n            </label>\n            <button class="edit-todo-btn" data-project-index="${t}">\n              <i class="fas fa-edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${t}">\n              <i class="fas fa-trash-alt"></i>\n            </button>\n          </div>\n        `,e.appendChild(s)}}document.querySelector(".todo-form-select").addEventListener("change",(function(){switch(this.value){case"high":this.classList.remove("medium"),this.classList.remove("low"),this.classList.add("high");break;case"medium":this.classList.add("medium"),this.classList.remove("low"),this.classList.remove("high");break;case"low":this.classList.remove("medium"),this.classList.add("low"),this.classList.remove("high")}}));const a=document.getElementById("project-add"),r=document.getElementById("project-edit"),d=document.getElementById("project-add-btn"),l=document.querySelectorAll(".close-span"),u=document.querySelector("#project-add-form"),p=document.querySelector("#project-edit-form"),m=document.querySelector("#project-list"),h=document.querySelector(".edit-project-btn"),v=document.querySelector(".add-todo-btn"),L=document.querySelector("#todo-add"),y=document.querySelector("#todo-add-form");function f(t){r.classList.add("show"),document.querySelector("#project-edit-name").value=`${o[t.target.parentNode.parentNode.getAttribute("data-project-index")].name}`,p.addEventListener("submit",(function e(n){var s,a;n.preventDefault(),r.classList.remove("show"),s=t.target.parentNode.parentNode.getAttribute("data-project-index"),a=document.querySelector("#project-edit-name").value,o[s].name=a,i(),c(t.target.parentNode.parentNode.getAttribute("data-project-index")),p.removeEventListener("submit",e)}))}d.onclick=function(){a.classList.add("show")},l.forEach((t=>{t.addEventListener("click",(function(){a.classList.remove("show"),r.classList.remove("show"),L.classList.remove("show")}))})),window.onclick=function(t){t.target!=a&&t.target!=r&&t.target!=L||(a.classList.remove("show"),r.classList.remove("show"),L.classList.remove("show"))},u.addEventListener("submit",(function(t){t.preventDefault(),a.classList.remove("show"),n(document.querySelector("#project-name").value),i()})),m.addEventListener("click",(function(t){var e;t.target.classList.contains("delete")&&(e=t.target.parentNode.getAttribute("data-project-index"),o.splice(e,1),i()),t.target.classList.contains("edit")?f(t):t.target.classList.contains("project")?c(t.target.getAttribute("data-project-index")):c(t.target.parentNode.getAttribute("data-project-index"))})),h.addEventListener("click",(function(t){f(t)})),v.addEventListener("click",(function(){L.classList.add("show")})),y.addEventListener("submit",(function(e){e.preventDefault(),L.classList.remove("show");const o=new FormData(y),n=Object.fromEntries(o.entries()),i=new t(n.title,n["due-date"],n.priority,n.complete);s(document.querySelector(".project-title-section").dataset.projectIndex,i),c(document.querySelector(".project-title-section").dataset.projectIndex)}));const j=new t("Finish project","2023-04-01","medium",!0);s(0,j),s(0,j),s(0,j),n("Shopping List"),s(1,new t("Buy groceries","2023-04-03","medium",!0)),i(),c(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,