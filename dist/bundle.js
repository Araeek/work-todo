(()=>{"use strict";function t(t,e,n,o){this.title=t,this.description=e,this.dueDate=n,this.priority=o}function e(t){this.name=t,this.todos=[]}const n=[new e("Default")];function o(t){const o=new e(t);n.push(o)}function i(t,e){n[t].todos.push(e)}function s(){const t=document.querySelector("#project-list");t.innerHTML="";for(let e=0;e<n.length;e++){const o=document.createElement("div");o.classList.add("project"),o.dataset.projectIndex=`${e}`,o.innerHTML=`\n          <h3>${n[e].name}</h3>\n          <div class="project-actions">\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-edit edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-trash-alt delete"></i>\n            </button>\n          </div>\n        `,t.appendChild(o)}}function c(t){const e=document.querySelector(".todo-container");document.querySelector("#project-title").textContent=`${n[t].name}`,e.innerHTML="";for(let o=0;o<n[t].todos.length;o++){const i=document.createElement("div");i.classList.add("todo"),i.innerHTML=`\n          <h3>${n[t].todos[o].title}</h3>\n          <p>\n            <input type="date" id="date" name="date" value=${n[t].todos[o].dueDate}>\n          </p>\n          <div class="todo-priority">\n            <select class="priority-select">\n              <option value="high" ${"high"===n[t].todos[o].priority?"selected":""}>\n              <div class="priority-circle priority-high"></div>\n              <p class="priority-text-high">high</p>\n              </option>\n              <option value="medium" ${"medium"===n[t].todos[o].priority?"selected":""}>\n              <div class="priority-circle priority-medium"></div>\n              <p class="priority-text-medium">medium</p>\n              </option>\n              <option value="low" ${"low"===n[t].todos[o].priority?"selected":""}>\n              <div class="priority-circle priority-low"></div>\n              <p class="priority-text-low">low</p>\n              </option>\n            </select>\n            \n          </div>\n          <div class="todo-actions">\n            <label class="complete-checkbox">\n              <span class="complete-label-text">Complete</span>\n              <input type="checkbox" name="checkbox">\n              <span class="complete-todo-btn"></span>\n            </label>\n            <button class="edit-todo-btn" data-project-index="${t}">\n              <i class="fas fa-edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${t}">\n              <i class="fas fa-trash-alt"></i>\n            </button>\n          </div>\n        `,e.appendChild(i)}}const a=document.getElementById("projectAdd"),r=document.getElementById("projectEdit"),d=document.getElementById("projectAddBtn"),l=document.querySelectorAll(".close-span"),p=document.querySelector("#project-add-form"),u=document.querySelector("#project-edit-form"),m=document.querySelector("#project-list");d.onclick=function(){a.classList.add("show")},l.forEach((t=>{t.addEventListener("click",(function(){a.classList.remove("show"),r.classList.remove("show")}))})),window.onclick=function(t){t.target!=a&&t.target!=r||(a.classList.remove("show"),r.classList.remove("show"))},p.addEventListener("submit",(function(t){t.preventDefault(),a.classList.remove("show"),o(document.querySelector("#project-name").value),s()})),m.addEventListener("click",(function(t){var e;t.target.classList.contains("delete")&&(e=t.target.parentNode.getAttribute("data-project-index"),n.splice(e,1),s()),t.target.classList.contains("edit")&&(r.classList.add("show"),document.querySelector("#project-edit-name").value=`${n[t.target.parentNode.getAttribute("data-project-index")].name}`,u.addEventListener("submit",(function e(o){o.preventDefault(),r.classList.remove("show"),function(t,e){n[t].name=e}(t.target.parentNode.getAttribute("data-project-index"),document.querySelector("#project-edit-name").value),s(),u.removeEventListener("submit",e)}))),t.target.classList.contains("project")?c(t.target.getAttribute("data-project-index")):(c(t.target.parentNode.getAttribute("data-project-index")),console.log(t.target.parentNode.getAttribute("data-project-index")))}));const h=new t("Finish project","Complete the assignment","2023-04-01","medium");i(0,h),i(0,h),i(0,h),o("Shopping List"),i(1,new t("Buy groceries","Get eggs, bread, and milk","2023-04-03","medium")),s(),c(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dC8uL3NyYy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvZGVmYXVsdFByb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9hcHAuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9kb20uanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9jb250cm9sbGVyLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gVG9kbyh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5KSB7XHJcbiAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcclxuICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xyXG4gIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcclxufVxyXG5cclxuZXhwb3J0IHsgVG9kbyB9O1xyXG4iLCJmdW5jdGlvbiBQcm9qZWN0KG5hbWUpIHtcclxuICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gIHRoaXMudG9kb3MgPSBbXTtcclxufVxyXG5cclxuZXhwb3J0IHsgUHJvamVjdCB9O1xyXG4iLCJpbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSAnLi9wcm9qZWN0LmpzJztcclxuXHJcbmNvbnN0IGRlZmF1bHRQcm9qZWN0ID0gbmV3IFByb2plY3QoXCJEZWZhdWx0XCIpO1xyXG5cclxuZXhwb3J0IHsgZGVmYXVsdFByb2plY3QgfTtcclxuIiwiaW1wb3J0IHsgUHJvamVjdCB9IGZyb20gXCIuL3Byb2plY3QuanNcIjtcclxuaW1wb3J0IHsgZGVmYXVsdFByb2plY3QgfSBmcm9tIFwiLi9kZWZhdWx0UHJvamVjdC5qc1wiO1xyXG5cclxuY29uc3QgcHJvamVjdHMgPSBbZGVmYXVsdFByb2plY3RdO1xyXG5cclxuZnVuY3Rpb24gYWRkUHJvamVjdChuYW1lKSB7XHJcbiAgY29uc3QgcHJvamVjdCA9IG5ldyBQcm9qZWN0KG5hbWUpO1xyXG4gIHByb2plY3RzLnB1c2gocHJvamVjdCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZVByb2plY3QoaW5kZXgpIHtcclxuICBwcm9qZWN0cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBlZGl0UHJvamVjdE5hbWUoaW5kZXgsIG5ld05hbWUpIHtcclxuICBwcm9qZWN0c1tpbmRleF0ubmFtZSA9IG5ld05hbWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZFRvZG9Ub1Byb2plY3QocHJvamVjdEluZGV4LCB0b2RvKSB7XHJcbiAgcHJvamVjdHNbcHJvamVjdEluZGV4XS50b2Rvcy5wdXNoKHRvZG8pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjb21wbGV0ZVRvZG8ocHJvamVjdEluZGV4LCB0b2RvSW5kZXgpIHtcclxuICBwcm9qZWN0c1twcm9qZWN0SW5kZXhdLnRvZG9zW3RvZG9JbmRleF0uY29tcGxldGVkID0gdHJ1ZTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2hhbmdlVG9kb1ByaW9yaXR5KHByb2plY3RJbmRleCwgdG9kb0luZGV4LCBwcmlvcml0eSkge1xyXG4gIHByb2plY3RzW3Byb2plY3RJbmRleF0udG9kb3NbdG9kb0luZGV4XS5wcmlvcml0eSA9IHByaW9yaXR5O1xyXG59XHJcblxyXG5mdW5jdGlvbiByZW1vdmVUb2RvRnJvbVByb2plY3QocHJvamVjdEluZGV4LCB0b2RvSW5kZXgpIHtcclxuICBwcm9qZWN0c1twcm9qZWN0SW5kZXhdLnRvZG9zLnNwbGljZSh0b2RvSW5kZXgsIDEpO1xyXG59XHJcblxyXG5leHBvcnQge1xyXG4gIGFkZFByb2plY3QsXHJcbiAgcmVtb3ZlUHJvamVjdCxcclxuICBlZGl0UHJvamVjdE5hbWUsXHJcbiAgYWRkVG9kb1RvUHJvamVjdCxcclxuICBjb21wbGV0ZVRvZG8sXHJcbiAgY2hhbmdlVG9kb1ByaW9yaXR5LFxyXG4gIHJlbW92ZVRvZG9Gcm9tUHJvamVjdCxcclxuICBwcm9qZWN0cyxcclxufTtcclxuIiwiaW1wb3J0IHsgcHJvamVjdHMgfSBmcm9tIFwiLi9hcHBcIjtcclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZVByb2plY3RzKCkge1xyXG4gIGNvbnN0IHByb2plY3RMaXN0RGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0LWxpc3RcIik7XHJcbiAgcHJvamVjdExpc3REaXYuaW5uZXJIVE1MID0gXCJcIjtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2plY3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjb25zdCBwcm9qZWN0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHByb2plY3REaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RcIik7XHJcbiAgICBwcm9qZWN0RGl2LmRhdGFzZXQucHJvamVjdEluZGV4ID0gYCR7aX1gO1xyXG4gICAgcHJvamVjdERpdi5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICA8aDM+JHtwcm9qZWN0c1tpXS5uYW1lfTwvaDM+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvamVjdC1hY3Rpb25zXCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJwcm9qZWN0LWJ0blwiIGRhdGEtcHJvamVjdC1pbmRleD1cIiR7aX1cIj5cclxuICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1lZGl0IGVkaXRcIj48L2k+IFxyXG4gICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInByb2plY3QtYnRuXCIgZGF0YS1wcm9qZWN0LWluZGV4PVwiJHtpfVwiPlxyXG4gICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLXRyYXNoLWFsdCBkZWxldGVcIj48L2k+XHJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgYDtcclxuICAgIHByb2plY3RMaXN0RGl2LmFwcGVuZENoaWxkKHByb2plY3REaXYpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gdXBkYXRlVG9kb3MocHJvamVjdEluZGV4KSB7XHJcbiAgY29uc3QgdG9kb0xpc3REaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRvZG8tY29udGFpbmVyXCIpO1xyXG4gIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC10aXRsZVwiKTtcclxuICBwcm9qZWN0VGl0bGUudGV4dENvbnRlbnQgPSBgJHtwcm9qZWN0c1twcm9qZWN0SW5kZXhdLm5hbWV9YDtcclxuICB0b2RvTGlzdERpdi5pbm5lckhUTUwgPSBcIlwiO1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvamVjdHNbcHJvamVjdEluZGV4XS50b2Rvcy5sZW5ndGg7IGkrKykge1xyXG4gICAgY29uc3QgdG9kb0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICB0b2RvRGl2LmNsYXNzTGlzdC5hZGQoXCJ0b2RvXCIpO1xyXG4gICAgdG9kb0Rpdi5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICA8aDM+JHtwcm9qZWN0c1twcm9qZWN0SW5kZXhdLnRvZG9zW2ldLnRpdGxlfTwvaDM+XHJcbiAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJkYXRlXCIgaWQ9XCJkYXRlXCIgbmFtZT1cImRhdGVcIiB2YWx1ZT0ke1xyXG4gICAgICAgICAgICAgIHByb2plY3RzW3Byb2plY3RJbmRleF0udG9kb3NbaV0uZHVlRGF0ZVxyXG4gICAgICAgICAgICB9PlxyXG4gICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRvZG8tcHJpb3JpdHlcIj5cclxuICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cInByaW9yaXR5LXNlbGVjdFwiPlxyXG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJoaWdoXCIgJHtcclxuICAgICAgICAgICAgICAgIHByb2plY3RzW3Byb2plY3RJbmRleF0udG9kb3NbaV0ucHJpb3JpdHkgPT09IFwiaGlnaFwiXHJcbiAgICAgICAgICAgICAgICAgID8gXCJzZWxlY3RlZFwiXHJcbiAgICAgICAgICAgICAgICAgIDogXCJcIlxyXG4gICAgICAgICAgICAgIH0+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByaW9yaXR5LWNpcmNsZSBwcmlvcml0eS1oaWdoXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJwcmlvcml0eS10ZXh0LWhpZ2hcIj5oaWdoPC9wPlxyXG4gICAgICAgICAgICAgIDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJtZWRpdW1cIiAke1xyXG4gICAgICAgICAgICAgICAgcHJvamVjdHNbcHJvamVjdEluZGV4XS50b2Rvc1tpXS5wcmlvcml0eSA9PT0gXCJtZWRpdW1cIlxyXG4gICAgICAgICAgICAgICAgICA/IFwic2VsZWN0ZWRcIlxyXG4gICAgICAgICAgICAgICAgICA6IFwiXCJcclxuICAgICAgICAgICAgICB9PlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcmlvcml0eS1jaXJjbGUgcHJpb3JpdHktbWVkaXVtXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJwcmlvcml0eS10ZXh0LW1lZGl1bVwiPm1lZGl1bTwvcD5cclxuICAgICAgICAgICAgICA8L29wdGlvbj5cclxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibG93XCIgJHtcclxuICAgICAgICAgICAgICAgIHByb2plY3RzW3Byb2plY3RJbmRleF0udG9kb3NbaV0ucHJpb3JpdHkgPT09IFwibG93XCJcclxuICAgICAgICAgICAgICAgICAgPyBcInNlbGVjdGVkXCJcclxuICAgICAgICAgICAgICAgICAgOiBcIlwiXHJcbiAgICAgICAgICAgICAgfT5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJpb3JpdHktY2lyY2xlIHByaW9yaXR5LWxvd1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgIDxwIGNsYXNzPVwicHJpb3JpdHktdGV4dC1sb3dcIj5sb3c8L3A+XHJcbiAgICAgICAgICAgICAgPC9vcHRpb24+XHJcbiAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRvZG8tYWN0aW9uc1wiPlxyXG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb21wbGV0ZS1jaGVja2JveFwiPlxyXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY29tcGxldGUtbGFiZWwtdGV4dFwiPkNvbXBsZXRlPC9zcGFuPlxyXG4gICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiY2hlY2tib3hcIj5cclxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImNvbXBsZXRlLXRvZG8tYnRuXCI+PC9zcGFuPlxyXG4gICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiZWRpdC10b2RvLWJ0blwiIGRhdGEtcHJvamVjdC1pbmRleD1cIiR7cHJvamVjdEluZGV4fVwiPlxyXG4gICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWVkaXRcIj48L2k+IFxyXG4gICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInByb2plY3QtYnRuXCIgZGF0YS1wcm9qZWN0LWluZGV4PVwiJHtwcm9qZWN0SW5kZXh9XCI+XHJcbiAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtdHJhc2gtYWx0XCI+PC9pPlxyXG4gICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIGA7XHJcbiAgICB0b2RvTGlzdERpdi5hcHBlbmRDaGlsZCh0b2RvRGl2KTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGV4cGFuZFRvZG8ocHJvamVjdEluZGV4LCB0b2RvSW5kZXgpIHtcclxuICAvLyBjb25zdCB0b2RvID0gcHJvamVjdHNbcHJvamVjdEluZGV4XS50b2Rvc1t0b2RvSW5kZXhdO1xyXG4gIC8vIHRvZG9EZXRhaWxzRGl2LmlubmVySFRNTCA9IGBcclxuICAvLyAgICAgICA8aDM+JHt0b2RvLnRpdGxlfTwvaDM+XHJcbiAgLy8gICAgICAgPHA+JHt0b2RvLmRlc2NyaXB0aW9ufTwvcD5cclxuICAvLyAgICAgICA8cD5EdWUgRGF0ZTogJHt0b2RvLmR1ZURhdGV9PC9wPlxyXG4gIC8vICAgICAgIDxwPlByaW9yaXR5OiAke3RvZG8ucHJpb3JpdHl9PC9wPlxyXG4gIC8vICAgICAgIDxidXR0b24gY2xhc3M9XCJlZGl0LXRvZG8tYnRuXCIgZGF0YS1wcm9qZWN0LWluZGV4PVwiJHtwcm9qZWN0SW5kZXh9XCIgZGF0YS10b2RvLWluZGV4PVwiJHt0b2RvSW5kZXh9XCI+RWRpdDwvYnV0dG9uPlxyXG4gIC8vICAgICBgO1xyXG59XHJcblxyXG5leHBvcnQgeyB1cGRhdGVQcm9qZWN0cywgdXBkYXRlVG9kb3MsIGV4cGFuZFRvZG8gfTtcclxuIiwiaW1wb3J0IHsgcHJvamVjdHMgfSBmcm9tIFwiLi9hcHBcIjtcclxuaW1wb3J0IHsgdXBkYXRlUHJvamVjdHMsIHVwZGF0ZVRvZG9zIH0gZnJvbSBcIi4vZG9tXCI7XHJcbmltcG9ydCB7IGFkZFByb2plY3QsIHJlbW92ZVByb2plY3QsIGVkaXRQcm9qZWN0TmFtZSB9IGZyb20gXCIuL2FwcFwiO1xyXG5cclxuY29uc3QgcHJvamVjdEFkZE1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0QWRkXCIpO1xyXG5jb25zdCBwcm9qZWN0RWRpdE1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0RWRpdFwiKTtcclxuY29uc3QgcHJvamVjdEFkZEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdEFkZEJ0blwiKTtcclxuY29uc3QgY2xvc2VTcGFuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jbG9zZS1zcGFuXCIpO1xyXG5jb25zdCBwcm9qZWN0QWRkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC1hZGQtZm9ybVwiKTtcclxuY29uc3QgcHJvamVjdEVkaXRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0LWVkaXQtZm9ybVwiKTtcclxuY29uc3QgcHJvamVjdExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtbGlzdFwiKTtcclxuXHJcbnByb2plY3RBZGRCdG4ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICBwcm9qZWN0QWRkTW9kYWwuY2xhc3NMaXN0LmFkZChcInNob3dcIik7XHJcbn07XHJcblxyXG5jbG9zZVNwYW4uZm9yRWFjaCgoc3BhbikgPT4ge1xyXG4gIHNwYW4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgIHByb2plY3RBZGRNb2RhbC5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICAgIHByb2plY3RFZGl0TW9kYWwuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxud2luZG93Lm9uY2xpY2sgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICBpZiAoZXZlbnQudGFyZ2V0ID09IHByb2plY3RBZGRNb2RhbCB8fCBldmVudC50YXJnZXQgPT0gcHJvamVjdEVkaXRNb2RhbCkge1xyXG4gICAgcHJvamVjdEFkZE1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xyXG4gICAgcHJvamVjdEVkaXRNb2RhbC5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICB9XHJcbn07XHJcblxyXG5wcm9qZWN0QWRkRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgcHJvamVjdEFkZE1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xyXG4gIGFkZFByb2plY3QoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0LW5hbWVcIikudmFsdWUpO1xyXG4gIHVwZGF0ZVByb2plY3RzKCk7XHJcbn0pO1xyXG5cclxucHJvamVjdExpc3QuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImRlbGV0ZVwiKSkge1xyXG4gICAgcmVtb3ZlUHJvamVjdChlLnRhcmdldC5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcImRhdGEtcHJvamVjdC1pbmRleFwiKSk7XHJcbiAgICB1cGRhdGVQcm9qZWN0cygpO1xyXG4gIH1cclxuICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZWRpdFwiKSkge1xyXG4gICAgcHJvamVjdEVkaXRNb2RhbC5jbGFzc0xpc3QuYWRkKFwic2hvd1wiKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC1lZGl0LW5hbWVcIikudmFsdWUgPSBgJHtcclxuICAgICAgcHJvamVjdHNbZS50YXJnZXQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXByb2plY3QtaW5kZXhcIildLm5hbWVcclxuICAgIH1gO1xyXG4gICAgcHJvamVjdEVkaXRGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZnVuY3Rpb24gX2xpc3RlbmVyKGV2ZW50KSB7XHJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHByb2plY3RFZGl0TW9kYWwuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XHJcbiAgICAgIGVkaXRQcm9qZWN0TmFtZShcclxuICAgICAgICBlLnRhcmdldC5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcImRhdGEtcHJvamVjdC1pbmRleFwiKSxcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtZWRpdC1uYW1lXCIpLnZhbHVlXHJcbiAgICAgICk7XHJcbiAgICAgIHVwZGF0ZVByb2plY3RzKCk7XHJcbiAgICAgIHByb2plY3RFZGl0Rm9ybS5yZW1vdmVFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIF9saXN0ZW5lcik7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInByb2plY3RcIikpIHtcclxuICAgIHVwZGF0ZVRvZG9zKGUudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtcHJvamVjdC1pbmRleFwiKSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHVwZGF0ZVRvZG9zKGUudGFyZ2V0LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1wcm9qZWN0LWluZGV4XCIpKTtcclxuICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1wcm9qZWN0LWluZGV4XCIpKVxyXG4gIH1cclxufSk7XHJcbiIsImltcG9ydCB7IFRvZG8gfSBmcm9tIFwiLi90b2RvLmpzXCI7XHJcbmltcG9ydCB7IHVwZGF0ZVByb2plY3RzLCB1cGRhdGVUb2RvcywgZXhwYW5kVG9kbyB9IGZyb20gXCIuL2RvbS5qc1wiO1xyXG5pbXBvcnQgeyBhZGRQcm9qZWN0LCBhZGRUb2RvVG9Qcm9qZWN0IH0gZnJvbSBcIi4vYXBwLmpzXCI7XHJcbmltcG9ydCBcIi4vY29udHJvbGxlci5qc1wiXHJcblxyXG5cclxuY29uc3QgdG9kbzEgPSBuZXcgVG9kbyhcclxuICBcIkZpbmlzaCBwcm9qZWN0XCIsXHJcbiAgXCJDb21wbGV0ZSB0aGUgYXNzaWdubWVudFwiLFxyXG4gIFwiMjAyMy0wNC0wMVwiLFxyXG4gIFwibWVkaXVtXCJcclxuKTtcclxuYWRkVG9kb1RvUHJvamVjdCgwLCB0b2RvMSk7XHJcbmFkZFRvZG9Ub1Byb2plY3QoMCwgdG9kbzEpO1xyXG5hZGRUb2RvVG9Qcm9qZWN0KDAsIHRvZG8xKTtcclxuXHJcbmFkZFByb2plY3QoXCJTaG9wcGluZyBMaXN0XCIpO1xyXG5jb25zdCB0b2RvMiA9IG5ldyBUb2RvKFxyXG4gIFwiQnV5IGdyb2Nlcmllc1wiLFxyXG4gIFwiR2V0IGVnZ3MsIGJyZWFkLCBhbmQgbWlsa1wiLFxyXG4gIFwiMjAyMy0wNC0wM1wiLFxyXG4gIFwibWVkaXVtXCJcclxuKTtcclxuYWRkVG9kb1RvUHJvamVjdCgxLCB0b2RvMik7XHJcblxyXG51cGRhdGVQcm9qZWN0cygpO1xyXG51cGRhdGVUb2RvcygwKTtcclxuZXhwYW5kVG9kbygwLCAwKTtcclxuXHJcbiJdLCJuYW1lcyI6WyJUb2RvIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJwcmlvcml0eSIsInRoaXMiLCJQcm9qZWN0IiwibmFtZSIsInRvZG9zIiwicHJvamVjdHMiLCJhZGRQcm9qZWN0IiwicHJvamVjdCIsInB1c2giLCJhZGRUb2RvVG9Qcm9qZWN0IiwicHJvamVjdEluZGV4IiwidG9kbyIsInVwZGF0ZVByb2plY3RzIiwicHJvamVjdExpc3REaXYiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpbm5lckhUTUwiLCJpIiwibGVuZ3RoIiwicHJvamVjdERpdiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJkYXRhc2V0IiwiYXBwZW5kQ2hpbGQiLCJ1cGRhdGVUb2RvcyIsInRvZG9MaXN0RGl2IiwidGV4dENvbnRlbnQiLCJ0b2RvRGl2IiwicHJvamVjdEFkZE1vZGFsIiwiZ2V0RWxlbWVudEJ5SWQiLCJwcm9qZWN0RWRpdE1vZGFsIiwicHJvamVjdEFkZEJ0biIsImNsb3NlU3BhbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJwcm9qZWN0QWRkRm9ybSIsInByb2plY3RFZGl0Rm9ybSIsInByb2plY3RMaXN0Iiwib25jbGljayIsImZvckVhY2giLCJzcGFuIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZSIsIndpbmRvdyIsImV2ZW50IiwidGFyZ2V0IiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSIsImUiLCJpbmRleCIsImNvbnRhaW5zIiwicGFyZW50Tm9kZSIsImdldEF0dHJpYnV0ZSIsInNwbGljZSIsIl9saXN0ZW5lciIsIm5ld05hbWUiLCJlZGl0UHJvamVjdE5hbWUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY29uc29sZSIsImxvZyIsInRvZG8xIl0sInNvdXJjZVJvb3QiOiIifQ==