(()=>{"use strict";function t(t,e,n,o){this.title=t,this.description=e,this.dueDate=n,this.priority=o}function e(t){this.name=t,this.todos=[]}const n=[new e("Default")];function o(t){const o=new e(t);n.push(o)}function i(t,e){n[t].todos.push(e)}function s(){const t=document.querySelector("#project-list");t.innerHTML="";for(let e=0;e<n.length;e++){const o=document.createElement("div");o.classList.add("project"),o.innerHTML=`\n          <h3>${n[e].name}</h3>\n          <div class="project-actions">\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-edit edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${e}">\n              <i class="fas fa-trash-alt delete"></i>\n            </button>\n          </div>\n        `,t.appendChild(o)}}const c=document.getElementById("projectAdd"),a=document.getElementById("projectEdit"),r=document.getElementById("projectAddBtn"),d=document.querySelectorAll(".close-span"),l=document.querySelector("#project-add-form"),p=document.querySelector("#project-edit-form"),u=document.querySelector("#project-list");r.onclick=function(){c.classList.add("show")},d.forEach((t=>{t.addEventListener("click",(function(){c.classList.remove("show"),a.classList.remove("show")}))})),window.onclick=function(t){t.target!=c&&t.target!=a||(c.classList.remove("show"),a.classList.remove("show"))},l.addEventListener("submit",(function(t){t.preventDefault(),c.classList.remove("show"),o(document.querySelector("#project-name").value),s()})),u.addEventListener("click",(function(t){var e;t.target.classList.contains("delete")&&(e=t.target.parentNode.getAttribute("data-project-index"),n.splice(e,1),s()),t.target.classList.contains("edit")&&(a.classList.add("show"),document.querySelector("#project-edit-name").value=`${n[t.target.parentNode.getAttribute("data-project-index")].name}`,p.addEventListener("submit",(function e(o){o.preventDefault(),a.classList.remove("show"),function(t,e){n[t].name=e}(t.target.parentNode.getAttribute("data-project-index"),document.querySelector("#project-edit-name").value),s(),p.removeEventListener("submit",e)})))}));const m=new t("Finish project","Complete the assignment","2023-04-01","medium");i(0,m),i(0,m),i(0,m),o("Shopping List"),i(1,new t("Buy groceries","Get eggs, bread, and milk","2023-04-03","medium")),s(),function(t){const e=document.querySelector(".todo-container");for(let t=0;t<n[0].todos.length;t++){const o=document.createElement("div");o.classList.add("todo"),o.innerHTML=`\n          <h3>${n[0].todos[t].title}</h3>\n          <p>\n            <input type="date" id="date" name="date" value=${n[0].todos[t].dueDate}>\n          </p>\n          <div class="todo-priority">\n            <select class="priority-select">\n              <option value="high" ${"high"===n[0].todos[t].priority?"selected":""}>\n              <div class="priority-circle priority-high"></div>\n              <p class="priority-text-high">high</p>\n              </option>\n              <option value="medium" ${"medium"===n[0].todos[t].priority?"selected":""}>\n              <div class="priority-circle priority-medium"></div>\n              <p class="priority-text-medium">medium</p>\n              </option>\n              <option value="low" ${"low"===n[0].todos[t].priority?"selected":""}>\n              <div class="priority-circle priority-low"></div>\n              <p class="priority-text-low">low</p>\n              </option>\n            </select>\n            \n          </div>\n          <div class="todo-actions">\n            <label class="complete-checkbox">\n              <span class="complete-label-text">Complete</span>\n              <input type="checkbox" name="checkbox">\n              <span class="complete-todo-btn"></span>\n            </label>\n            <button class="edit-todo-btn" data-project-index="0">\n              <i class="fas fa-edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="0">\n              <i class="fas fa-trash-alt"></i>\n            </button>\n          </div>\n        `,e.appendChild(o)}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,