(()=>{"use strict";function t(t){this.name=t,this.todos=[]}const e=JSON.parse(localStorage.getItem("projects"))||[];function o(o){const s=new t(o);e.push(s),n()}function n(){localStorage.setItem("projects",JSON.stringify(e))}function s(){const t=document.querySelector("#project-list");t.innerHTML="";for(let o=0;o<e.length;o++){const n=document.createElement("div");n.classList.add("project"),n.dataset.projectIndex=`${o}`,n.innerHTML=`\n          <h3>${e[o].name}</h3>\n          <div class="project-actions">\n            <button class="project-btn" data-project-index="${o}">\n              <i class="fas fa-edit edit"></i> \n            </button>\n            <button class="project-btn" data-project-index="${o}">\n              <i class="fas fa-trash-alt delete"></i>\n            </button>\n          </div>\n        `,t.appendChild(n)}}function a(t){const o=document.querySelector(".todo-container");document.querySelector("#project-title").textContent=`${e[t].name}`,document.querySelector(".project-title-section").dataset.projectIndex=`${t}`,document.querySelector(".edit-project-btn").dataset.projectIndex=`${t}`,document.querySelector(".todo-container").dataset.projectIndex=`${t}`,o.innerHTML="",0===e[t].todos.length&&(o.innerHTML="<h3 class='first-todo'>Click on <span>Add Todo + </span>button to add your first todo to project</h3>");for(let n=0;n<e[t].todos.length;n++){const s=document.createElement("div");s.classList.add("todo"),s.dataset.todoIndex=n,s.innerHTML=`\n          <h3 class="todo-title">${e[t].todos[n].title}</h3>\n          <p>\n            <input class="todo-date" type="date" id="date" name="date" value=${e[t].todos[n].dueDate}>\n          </p>\n          <div class="todo-priority">\n            <select class="priority-select">\n              <option value="high" ${"high"===e[t].todos[n].priority?"selected":""}>high\n              </option>\n              <option value="medium" ${"medium"===e[t].todos[n].priority?"selected":""}>medium\n              </option>\n              <option value="low" ${"low"===e[t].todos[n].priority?"selected":""}>low\n              </option>\n            </select>\n            \n          </div>\n          <div class="todo-actions">\n            <label class="complete-checkbox">\n              <span class="complete-label-text">Complete</span>\n              <input class=todo-complete type="checkbox" name="checkbox" ${e[t].todos[n].complete?"checked":""}>\n              <span class="complete-todo-btn"></span>\n            </label>\n            <button class="edit-todo-btn">\n              <i class="fas fa-edit edit-todo"></i> \n            </button>\n            <button class="project-btn">\n              <i class="fas fa-trash-alt delete-todo"></i>\n            </button>\n          </div>\n        `,o.appendChild(s)}}function c(t,e,o,n){this.title=t,this.dueDate=e,this.priority=o,this.complete=n}document.querySelector(".todo-form-select").addEventListener("change",(function(){switch(this.value){case"high":this.classList.remove("medium"),this.classList.remove("low"),this.classList.add("high");break;case"medium":this.classList.add("medium"),this.classList.remove("low"),this.classList.remove("high");break;case"low":this.classList.remove("medium"),this.classList.add("low"),this.classList.remove("high")}}));const d=document.getElementById("project-add"),r=document.getElementById("project-edit"),i=document.getElementById("project-add-btn"),l=document.querySelectorAll(".close-span"),u=document.querySelector("#project-add-form"),p=document.querySelector("#project-edit-form"),m=document.querySelector("#project-list"),h=document.querySelector(".edit-project-btn"),v=document.querySelector(".add-todo-btn"),g=document.querySelector("#todo-add"),f=document.querySelector("#todo-add-form"),L=document.querySelector(".todo-container");function y(t){r.classList.add("show"),document.querySelector("#project-edit-name").value=`${e[t.target.parentNode.getAttribute("data-project-index")].name}`,p.addEventListener("submit",(function o(n){var c,d;n.preventDefault(),r.classList.remove("show"),c=t.target.parentNode.getAttribute("data-project-index"),d=document.querySelector("#project-edit-name").value,e[c].name=d,s(),a(t.target.parentNode.getAttribute("data-project-index")),p.removeEventListener("submit",o)})),n()}i.onclick=function(){d.classList.add("show")},l.forEach((t=>{t.addEventListener("click",(function(){d.classList.remove("show"),r.classList.remove("show"),g.classList.remove("show")}))})),window.onclick=function(t){t.target!=d&&t.target!=r&&t.target!=g||(d.classList.remove("show"),r.classList.remove("show"),g.classList.remove("show"))},u.addEventListener("submit",(function(t){t.preventDefault(),d.classList.remove("show"),o(document.querySelector("#project-name").value),s(),n()})),m.addEventListener("click",(function(t){var o;t.target.classList.contains("delete")&&(o=t.target.parentNode.getAttribute("data-project-index"),e.splice(o,1),s(),n()),t.target.classList.contains("edit")?y(t):t.target.classList.contains("project")?a(t.target.getAttribute("data-project-index")):a(t.target.parentNode.getAttribute("data-project-index"))})),h.addEventListener("click",(function(t){y(t)})),v.addEventListener("click",(function(){g.classList.add("show")})),f.addEventListener("submit",(function(t){t.preventDefault(),g.classList.remove("show");const o=new FormData(f),s=Object.fromEntries(o.entries()),d=new c(s.title,s["due-date"],s.priority,s.complete);!function(t,o){e[t].todos.push(o)}(document.querySelector(".todo-container").dataset.projectIndex,d),a(document.querySelector(".todo-container").dataset.projectIndex),n()})),L.addEventListener("click",(function(t){if(t.target.classList.contains("delete-todo")){const s=document.querySelector(".todo-container").dataset.projectIndex;o=t.target.parentNode.parentNode.parentNode.dataset.todoIndex,e[s].todos.splice(o,1),a(s),n()}var o;if(t.target.classList.contains("edit-todo")){console.log();const o=t.target.parentNode.parentNode.parentNode.querySelector(".todo-title"),s=document.createElement("input");s.classList.add("todo-title"),s.value=o.textContent,o.replaceWith(s),s.focus(),s.addEventListener("keydown",(o=>{if("Enter"===o.key){const o=document.querySelector(".todo-container").dataset.projectIndex;!function(t,o,n){e[t].todos[o].title=n}(o,t.target.parentNode.parentNode.parentNode.dataset.todoIndex,s.value);const c=document.createElement("h3");c.textContent=s.value,s.replaceWith(c),a(o),n()}}))}})),L.addEventListener("change",(function(t){const o=document.querySelector(".todo-container").dataset.projectIndex;t.target.classList.contains("todo-complete")&&function(t,o,n){e[t].todos[o].complete=n}(o,t.target.parentNode.parentNode.parentNode.dataset.todoIndex,t.target.checked),t.target.classList.contains("priority-select")&&function(t,o,n){e[t].todos[o].priority=n}(o,t.target.parentNode.parentNode.dataset.todoIndex,t.target.value),t.target.classList.contains("todo-date")&&function(t,o,n){e[t].todos[o].dueDate=n}(o,t.target.parentNode.parentNode.dataset.todoIndex,t.target.value),a(o),n()})),0===e.length&&o("Default Project"),s(),a(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,